services:
  db:
    image: postgres:15
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: speedliner
      POSTGRES_PASSWORD: supersecret
      POSTGRES_DB: speedliner
    volumes:
      - db_data:/var/lib/postgresql/data
    networks: [internal]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U speedliner"]
      interval: 5s
      timeout: 3s
      retries: 5

  speedliner-server:
    image: finndotde/speedliner:latest
    restart: unless-stopped
    env_file: .env
    environment:
      - APP_ENV=production
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks: [internal]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/app/ping"]
      interval: 2000s
      timeout: 3s
      start_period: 15s
      retries: 10
    volumes:
      - ./app.log:/app/app.log

  cloudflared:
    image: cloudflare/cloudflared:2025.8.0
    restart: unless-stopped
    command: tunnel --no-autoupdate --metrics 0.0.0.0:9090 --config /etc/cloudflared/config.yml run
    volumes:
      - ./cloudflared:/etc/cloudflared:ro
    depends_on:
      speedliner-server:
        condition: service_healthy
    networks: [internal]
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/metrics"]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 10s

volumes:
  db_data:

networks:
  internal:
    driver: bridge
