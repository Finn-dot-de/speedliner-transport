{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "REST API für Speedliner",
        "title": "Speedliner API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/app/callback": {
            "get": {
                "description": "OAuth2 Callback für ESI, speichert Token und setzt Cookie",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ESI Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to home",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/login": {
            "get": {
                "description": "Leitet zum ESI-Login um",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login redirect",
                "responses": {
                    "302": {
                        "description": "Redirect",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/logout": {
            "get": {
                "description": "Löscht den Auth-Cookie und entfernt das Token aus dem Speicher",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/me": {
            "get": {
                "description": "Gibt Charakter-ID und Name zurück (aus Cookie)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.VerifyResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/ping": {
            "get": {
                "description": "Gibt \"pong\" zurück",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/role": {
            "get": {
                "description": "Gibt die Rolle des eingeloggten Benutzers zurück",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Benutzerrolle abrufen",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/routes": {
            "get": {
                "description": "Gibt alle verfügbaren Transport-Routen zurück",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Get all active routes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Route"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Erstellt eine neue Transport-Route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Neue Route anlegen",
                "parameters": [
                    {
                        "description": "Neue Route",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.Route"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/structs.Route"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB Insert error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/routes/{id}": {
            "put": {
                "description": "Aktualisiert eine bestehende Transport-Route anhand der ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Route aktualisieren",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Route-Daten",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.Route"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Route"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB Update error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Löscht eine Transport-Route anhand der ID",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Route löschen",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Route ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB Delete error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/users": {
            "get": {
                "description": "Gibt eine Liste aller Benutzer mit deren Rollen zurück (nur Admin).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Alle Benutzer abrufen",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.User"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/users/{charID}/role": {
            "put": {
                "description": "Setzt die Rolle eines Benutzers anhand der charID (nur Admin).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Rolle eines Benutzers ändern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Character ID",
                        "name": "charID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Neue Rolle",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON or role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.Route": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pricePerM3": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "structs.UpdateRoleReq": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "structs.User": {
            "description": "Darstellung eines Users für die Admin-API.",
            "type": "object",
            "properties": {
                "char_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "structs.VerifyResponse": {
            "type": "object",
            "properties": {
                "CharacterID": {
                    "type": "integer",
                    "example": 12345678
                },
                "CharacterName": {
                    "type": "string",
                    "example": "Pilot McFly"
                }
            }
        }
    }
}