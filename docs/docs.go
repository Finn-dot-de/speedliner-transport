// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app/callback": {
            "get": {
                "description": "OAuth2 Callback f端r ESI, speichert Token und setzt Cookie",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ESI Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to home",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/login": {
            "get": {
                "description": "Leitet zum ESI-Login um",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login redirect",
                "responses": {
                    "302": {
                        "description": "Redirect",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/me": {
            "get": {
                "description": "Gibt Charakter-ID und Name zur端ck (aus Cookie)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.VerifyResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/app/ping": {
            "get": {
                "description": "Gibt \"pong\" zur端ck",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.VerifyResponse": {
            "type": "object",
            "properties": {
                "CharacterID": {
                    "type": "integer",
                    "example": 12345678
                },
                "CharacterName": {
                    "type": "string",
                    "example": "Pilot McFly"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Speedliner API",
	Description:      "REST API f端r Speedliner",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
